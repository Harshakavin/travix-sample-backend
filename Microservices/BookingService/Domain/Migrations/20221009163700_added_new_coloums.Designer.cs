// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TravixBackend.BookingService.Domain;

#nullable disable

namespace TravixBackend.BookingService.Domain.Migrations
{
    [DbContext(typeof(TravixBackendDBContext))]
    [Migration("20221009163700_added_new_coloums")]
    partial class added_new_coloums
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TravixBackend.BookingService.Domain.Data.Entities.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ArrivalTime")
                        .HasColumnType("text")
                        .HasColumnName("arrivalTime");

                    b.Property<string>("Cost")
                        .HasColumnType("text")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<string>("Departing")
                        .HasColumnType("text")
                        .HasColumnName("departingAt");

                    b.Property<string>("FlightCode")
                        .HasColumnType("text")
                        .HasColumnName("flightCode");

                    b.Property<string>("From")
                        .HasColumnType("text")
                        .HasColumnName("from");

                    b.Property<string>("Group")
                        .HasColumnType("text")
                        .HasColumnName("group");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PassportNo")
                        .HasColumnType("text")
                        .HasColumnName("passportNo");

                    b.Property<string>("Seat")
                        .HasColumnType("text")
                        .HasColumnName("seat");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("To")
                        .HasColumnType("text")
                        .HasColumnName("to");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_date");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Way")
                        .HasColumnType("text")
                        .HasColumnName("way");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("bookings", (string)null);
                });

            modelBuilder.Entity("TravixBackend.BookingService.Domain.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2022, 10, 9, 16, 36, 59, 885, DateTimeKind.Utc).AddTicks(96),
                            Password = "d033e22ae348aeb5660fc2140aec35850c4da997",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("TravixBackend.BookingService.Domain.Data.Entities.Booking", b =>
                {
                    b.HasOne("TravixBackend.BookingService.Domain.Data.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravixBackend.BookingService.Domain.Data.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
